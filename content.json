{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/12/20/hello-world/"},{"title":"자바 설치 방법","text":"이미지","link":"/2022/12/21/java_install/"},{"title":"R 설치 방법","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/12/20/2022/12/r_install/"},{"title":"Streamlit 라이브러리를 활용한 배포 - BigQuery 사용","text":"개요 Streamlit 라이브러리와 BigQuery를 사용하여 배포를 진행한다. GCP 클라우드 프로젝트 설정 과정은 생략한다. BigQuery API 사용설정 Project API에서 ENABLE APIS AND SERVICES 버튼을 클릭한다. 빅쿼리 API를 탐색한다. 키워드명 : BigQuery API manage 버튼을 클릭한다. 인증키를 다운로드 받도록 한다. (CREATE CREDENTIALS클릭) 아래와 같이 지정 후, 스크롤을 내려서 NEXT 버튼을 클릭한다. 임의의 Service account ID 작성 후, CREATE AND CONTINUE 버튼을 클릭한다. 프로젝트 권한을 부여 후, CONTINUE 버튼을 클릭한다. Done 버튼을 클릭한다. Service Accounts - [우측] Manage keys 버튼 클릭 Create new key 버튼 클릭 JSON 클릭 json 파일을 다운로드 받는다. Github Repo 생성 임의의 Github Repo를 생성하고, 로컬로 다운로드 받는다. 생성 방법은 생략한다. secrets.toml 파일 설정 .streamlit 폴더를 생성하고, secrets.toml 파일을 생성하여 아래와 같이 작성한다. 12345678910111213# .streamlit/secrets.toml[gcp_service_account]type = &quot;service_account&quot;project_id = &quot;xxx&quot;private_key_id = &quot;xxx&quot;private_key = &quot;xxx&quot;client_email = &quot;xxx&quot;client_id = &quot;xxx&quot;auth_uri = &quot;https://accounts.google.com/o/oauth2/auth&quot;token_uri = &quot;https://oauth2.googleapis.com/token&quot;auth_provider_x509_cert_url = &quot;https://www.googleapis.com/oauth2/v1/certs&quot;client_x509_cert_url = &quot;xxx&quot; 이때 중요한 것은 위 파일은 .gitignore 에 등록한 후, Github Repo에 등록을 해둬야 한다. 보안은 중요하다. secrets.toml 파일을 아래와 같이 수정한다. Streamlit 대시보드 생성 라이브러리 설치 후, 간단하게 화면을 출력하도록 한다. 123$ virtualenv venv$ source venv/Scripts/activate(venv) $ pip install numpy pandas matplotlib seaborn altair plotly streamlit joblib scikit-learn google-cloud-bigquery pandas-gbq pycoingecko 설치된 라이브러리를 requirements.txt 파일로 내보낸다. 1(venv) $ pip freeze &gt; requirements.txt 라이브러리 설치가 완료되면 아래와 같이 코드를 복사한 뒤, [app.py](http://app.py) 를 설치한다. 데이터는 빅쿼리 내부 sample datasets 를 사용했다. https://cloud.google.com/bigquery/public-data#sample_tables 12345678910111213141516171819202122232425262728# streamlit_app.pyimport streamlit as stfrom google.oauth2 import service_accountfrom google.cloud import bigquery# Create API client.credentials = service_account.Credentials.from_service_account_info( st.secrets[&quot;gcp_service_account&quot;])client = bigquery.Client(credentials=credentials)# Perform query.# Uses st.experimental_memo to only rerun when the query changes or after 10 min.@st.experimental_memo(ttl=600)def run_query(query): query_job = client.query(query) rows_raw = query_job.result() # Convert to list of dicts. Required for st.experimental_memo to hash the return value. rows = [dict(row) for row in rows_raw] return rowsrows = run_query(&quot;SELECT word FROM `bigquery-public-data.samples.shakespeare` LIMIT 10&quot;)# Print results.st.write(&quot;Some wise words from Shakespeare:&quot;)for row in rows: st.write(&quot;✍️ &quot; + row['word']) 이제 실행한후, 데이터가 정상적으로 나오는지 확인한다. 12345(venv) $ streamlit run app.pyYou can now view your Streamlit app in your browser. Local URL: http://localhost:8501 Network URL: http://192.168.0.20:8501 배포 배포는 https://share.streamlit.io/signup 에서 진행한다. 빅쿼리에서 다운로드 받은 설정 파일을 지정하기 위해 Advanced Settings 를 클릭한다. Secrets 에 해당 secrets.toml 코드를 복사하여 붙여넣는다. Deploy 버튼을 클릭한다.","link":"/2022/12/19/2022/12/test/"}],"tags":[{"name":"Injury","slug":"Injury","link":"/tags/Injury/"},{"name":"Fight","slug":"Fight","link":"/tags/Fight/"},{"name":"Shocking","slug":"Shocking","link":"/tags/Shocking/"},{"name":"R","slug":"R","link":"/tags/R/"}],"categories":[{"name":"Sports","slug":"Sports","link":"/categories/Sports/"},{"name":"Baseball","slug":"Sports/Baseball","link":"/categories/Sports/Baseball/"},{"name":"R","slug":"R","link":"/categories/R/"},{"name":"Baseball","slug":"R/Baseball","link":"/categories/R/Baseball/"}],"pages":[]}